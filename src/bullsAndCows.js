'use strict';

/**
 * Implement bullsAndCows function:
 *
 * Function takes 2 strings: generatedNumber (generated by computer) and
 * enteredNumber (entered by player) and returns count of bulls and cows
 * according to rules (see readme.md). Each parameter should be exactly 4 digits
 * long.
 *
 * Function returns result as object with properties 'bulls' and 'cows' where
 * 'result.bulls' is a count of bulls and result.cows is a count of cows.
 *
 * If wrong parameter enteredNumber is given function returns undefined.
 *
 * bullsAndCows('1234', '1345') === [1, 2]
 * bullsAndCows('1234', '1234') === [4, 0]
 * bullsAndCows('1234', '') === undefined
 * bullsAndCows('1234', '12') === undefined
 * bullsAndCows('1234', 'asdf') === undefined
 * bullsAndCows('1234', '1234567890') === undefined
 *
 * @param {string} generatedNumber - generated by computer
 * @param {string} enteredNumber - entered by a player
 *
 * @return {object} - like {bulls: 0, cows: 0}
 */
function bullsAndCows(generatedNumber, enteredNumber) {
  // let cowCounter = 0;
  // let bullsCounter = 0;
  let j = 0;
  const result = {
    bulls: 0,
    cows: 0,
  };
  const regExp = /\w*/g;

  if (enteredNumber === undefined) {
    return undefined;
  }

  if (enteredNumber.length === 4 && enteredNumber !== regExp) {
    loop1:
    for (let i = 0; i < enteredNumber.length; i++) {
      const charOfEntered = enteredNumber.charAt([i]);

      if (generatedNumber.includes(enteredNumber[i])) {
        result.cows++;
      }

      if (enteredNumber[i] === enteredNumber[i + 1]) {
        return undefined;
      }

      for (; j < generatedNumber.length;) {
        const charOfGenerated = generatedNumber.charAt([j]);

        if (charOfEntered === charOfGenerated) {
          result.bulls++;
          result.cows--;
          j++;
          continue loop1;
        } else {
          j++;
          continue loop1;
        }
      }
    }
  } else {
    return undefined;
  }

  return result;
}

module.exports = bullsAndCows;
